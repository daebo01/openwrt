From 086f78cad754496d1c12f8581bda4468a238a277 Mon Sep 17 00:00:00 2001
From: daebo01 <daebo01@playmp3.kr>
Date: Mon, 22 Nov 2021 12:01:42 -0500
Subject: [PATCH] Add support for QCN550x

Signed-off-by: daebo01 <daebo01@playmp3.kr>
---
 arch/mips/ath79/clock.c                       | 105 +++++++++++++++
 arch/mips/ath79/common.c                      |   4 +
 arch/mips/ath79/early_printk.c                |   1 +
 arch/mips/ath79/setup.c                       |   9 +-
 .../mips/include/asm/mach-ath79/ar71xx_regs.h | 126 ++++++++++++++++++
 arch/mips/include/asm/mach-ath79/ath79.h      |  11 ++
 6 files changed, 255 insertions(+), 1 deletion(-)

diff --git a/arch/mips/ath79/clock.c b/arch/mips/ath79/clock.c
index e0321661b6ed..9d6dbb158c4a 100644
--- a/arch/mips/ath79/clock.c
+++ b/arch/mips/ath79/clock.c
@@ -619,6 +619,108 @@ static void __init qca956x_clocks_init(void __iomem *pll_base)
 	ath79_set_clk(ATH79_CLK_AHB, ahb_rate);
 }
 
+static void __init qcn550x_clocks_init(void __iomem *pll_base)
+{
+	unsigned long ref_rate;
+	unsigned long cpu_rate;
+	unsigned long ddr_rate;
+	unsigned long ahb_rate;
+	u32 pll, out_div, ref_div, nint, hfrac, lfrac, clk_ctrl, postdiv;
+	u32 cpu_pll, ddr_pll;
+	u32 bootstrap;
+
+	/* 
+	 * QCN550x timer init workaround has to be applied right before setting
+	 * up the clock. Else, there will be no jiffies 
+	 */
+	u32 misc;
+
+	misc = ath79_reset_rr(AR71XX_RESET_REG_MISC_INT_ENABLE);
+	misc |= MISC_INT_MIPS_SI_TIMERINT_MASK;
+	ath79_reset_wr(AR71XX_RESET_REG_MISC_INT_ENABLE, misc);
+
+	bootstrap = ath79_reset_rr(QCN550X_RESET_REG_BOOTSTRAP);
+	if (bootstrap &	QCN550X_BOOTSTRAP_REF_CLK_40)
+		ref_rate = 40 * 1000 * 1000;
+	else
+		ref_rate = 25 * 1000 * 1000;
+
+	ref_rate = ath79_setup_ref_clk(ref_rate);
+
+	pll = __raw_readl(pll_base + QCN550X_PLL_CPU_CONFIG_REG);
+	out_div = (pll >> QCN550X_PLL_CPU_CONFIG_OUTDIV_SHIFT) &
+		  QCN550X_PLL_CPU_CONFIG_OUTDIV_MASK;
+	ref_div = (pll >> QCN550X_PLL_CPU_CONFIG_REFDIV_SHIFT) &
+		  QCN550X_PLL_CPU_CONFIG_REFDIV_MASK;
+
+	pll = __raw_readl(pll_base + QCN550X_PLL_CPU_CONFIG1_REG);
+	nint = (pll >> QCN550X_PLL_CPU_CONFIG1_NINT_SHIFT) &
+	       QCN550X_PLL_CPU_CONFIG1_NINT_MASK;
+	hfrac = (pll >> QCN550X_PLL_CPU_CONFIG1_NFRAC_H_SHIFT) &
+	       QCN550X_PLL_CPU_CONFIG1_NFRAC_H_MASK;
+	lfrac = (pll >> QCN550X_PLL_CPU_CONFIG1_NFRAC_L_SHIFT) &
+	       QCN550X_PLL_CPU_CONFIG1_NFRAC_L_MASK;
+
+	cpu_pll = nint * ref_rate / ref_div;
+	cpu_pll += (lfrac * ref_rate) / ((ref_div * 25) << 13);
+	cpu_pll += (hfrac >> 13) * ref_rate / ref_div;
+	cpu_pll /= (1 << out_div);
+
+	pll = __raw_readl(pll_base + QCN550X_PLL_DDR_CONFIG_REG);
+	out_div = (pll >> QCN550X_PLL_DDR_CONFIG_OUTDIV_SHIFT) &
+		  QCN550X_PLL_DDR_CONFIG_OUTDIV_MASK;
+	ref_div = (pll >> QCN550X_PLL_DDR_CONFIG_REFDIV_SHIFT) &
+		  QCN550X_PLL_DDR_CONFIG_REFDIV_MASK;
+	pll = __raw_readl(pll_base + QCN550X_PLL_DDR_CONFIG1_REG);
+	nint = (pll >> QCN550X_PLL_DDR_CONFIG1_NINT_SHIFT) &
+	       QCN550X_PLL_DDR_CONFIG1_NINT_MASK;
+	hfrac = (pll >> QCN550X_PLL_DDR_CONFIG1_NFRAC_H_SHIFT) &
+	       QCN550X_PLL_DDR_CONFIG1_NFRAC_H_MASK;
+	lfrac = (pll >> QCN550X_PLL_DDR_CONFIG1_NFRAC_L_SHIFT) &
+	       QCN550X_PLL_DDR_CONFIG1_NFRAC_L_MASK;
+
+	ddr_pll = nint * ref_rate / ref_div;
+	ddr_pll += (lfrac * ref_rate) / ((ref_div * 25) << 13);
+	ddr_pll += (hfrac >> 13) * ref_rate / ref_div;
+	ddr_pll /= (1 << out_div);
+
+	clk_ctrl = __raw_readl(pll_base + QCN550X_PLL_CLK_CTRL_REG);
+
+	postdiv = (clk_ctrl >> QCN550X_PLL_CLK_CTRL_CPU_POST_DIV_SHIFT) &
+		  QCN550X_PLL_CLK_CTRL_CPU_POST_DIV_MASK;
+
+	if (clk_ctrl & QCN550X_PLL_CLK_CTRL_CPU_PLL_BYPASS)
+		cpu_rate = ref_rate;
+	else if (clk_ctrl & QCN550X_PLL_CLK_CTRL_CPU_DDRCLK_FROM_CPUPLL)
+		cpu_rate = ddr_pll / (postdiv + 1);
+	else
+		cpu_rate = cpu_pll / (postdiv + 1);
+
+	postdiv = (clk_ctrl >> QCN550X_PLL_CLK_CTRL_DDR_POST_DIV_SHIFT) &
+		  QCN550X_PLL_CLK_CTRL_DDR_POST_DIV_MASK;
+
+	if (clk_ctrl & QCN550X_PLL_CLK_CTRL_DDR_PLL_BYPASS)
+		ddr_rate = ref_rate;
+	else if (clk_ctrl & QCN550X_PLL_CLK_CTRL_CPU_DDRCLK_FROM_DDRPLL)
+		ddr_rate = cpu_pll / (postdiv + 1);
+	else
+		ddr_rate = ddr_pll / (postdiv + 1);
+
+	postdiv = (clk_ctrl >> QCN550X_PLL_CLK_CTRL_AHB_POST_DIV_SHIFT) &
+		  QCN550X_PLL_CLK_CTRL_AHB_POST_DIV_MASK;
+
+	if (clk_ctrl & QCN550X_PLL_CLK_CTRL_AHB_PLL_BYPASS)
+		ahb_rate = ref_rate;
+	else if (clk_ctrl & QCN550X_PLL_CLK_CTRL_AHBCLK_FROM_DDRPLL)
+		ahb_rate = ddr_pll / (postdiv + 1);
+	else
+		ahb_rate = cpu_pll / (postdiv + 1);
+
+	ath79_set_clk(ATH79_CLK_CPU, cpu_rate);
+	ath79_set_clk(ATH79_CLK_DDR, ddr_rate);
+	ath79_set_clk(ATH79_CLK_AHB, ahb_rate);
+}
+
 static void __init ath79_clocks_init_dt(struct device_node *np)
 {
 	struct clk *ref_clk;
@@ -649,6 +751,8 @@ static void __init ath79_clocks_init_dt(struct device_node *np)
 		qca955x_clocks_init(pll_base);
 	else if (of_device_is_compatible(np, "qca,qca9560-pll"))
 		qca956x_clocks_init(pll_base);
+	else if (of_device_is_compatible(np, "qca,qcn5500-pll"))
+		qcn550x_clocks_init(pll_base);
 
 	if (!clks[ATH79_CLK_MDIO])
 		clks[ATH79_CLK_MDIO] = clks[ATH79_CLK_REF];
@@ -678,3 +782,4 @@ CLK_OF_DECLARE(ar9340_clk, "qca,ar9340-pll", ath79_clocks_init_dt);
 CLK_OF_DECLARE(ar9530_clk, "qca,qca9530-pll", ath79_clocks_init_dt);
 CLK_OF_DECLARE(ar9550_clk, "qca,qca9550-pll", ath79_clocks_init_dt);
 CLK_OF_DECLARE(ar9560_clk, "qca,qca9560-pll", ath79_clocks_init_dt);
+CLK_OF_DECLARE(ar5500_clk, "qca,qcn5500-pll", ath79_clocks_init_dt);
diff --git a/arch/mips/ath79/common.c b/arch/mips/ath79/common.c
index 0858f434ca5a..398f26146448 100644
--- a/arch/mips/ath79/common.c
+++ b/arch/mips/ath79/common.c
@@ -108,6 +108,8 @@ void ath79_device_reset_set(u32 mask)
 		reg = QCA955X_RESET_REG_RESET_MODULE;
 	else if (soc_is_qca956x() || soc_is_tp9343())
 		reg = QCA956X_RESET_REG_RESET_MODULE;
+	else if (soc_is_qcn550x())
+		reg = QCN550X_RESET_REG_RESET_MODULE;
 	else
 		BUG();
 
@@ -140,6 +142,8 @@ void ath79_device_reset_clear(u32 mask)
 		reg = QCA955X_RESET_REG_RESET_MODULE;
 	else if (soc_is_qca956x() || soc_is_tp9343())
 		reg = QCA956X_RESET_REG_RESET_MODULE;
+	else if (soc_is_qcn550x())
+		reg = QCN550X_RESET_REG_RESET_MODULE;
 	else
 		BUG();
 
diff --git a/arch/mips/ath79/early_printk.c b/arch/mips/ath79/early_printk.c
index 782732cd1a2b..70390105b208 100644
--- a/arch/mips/ath79/early_printk.c
+++ b/arch/mips/ath79/early_printk.c
@@ -121,6 +121,7 @@ static void prom_putchar_init(void)
 	case REV_ID_MAJOR_QCA9558:
 	case REV_ID_MAJOR_TP9343:
 	case REV_ID_MAJOR_QCA956X:
+	case REV_ID_MAJOR_QCN5502:
 		_prom_putchar = prom_putchar_ar71xx;
 		break;
 
diff --git a/arch/mips/ath79/setup.c b/arch/mips/ath79/setup.c
index ea385a865781..d32c3d4bb503 100644
--- a/arch/mips/ath79/setup.c
+++ b/arch/mips/ath79/setup.c
@@ -185,6 +185,12 @@ static void __init ath79_detect_sys_type(void)
 		rev = id & QCA956X_REV_ID_REVISION_MASK;
 		break;
 
+	case REV_ID_MAJOR_QCN5502:
+		ath79_soc = ATH79_SOC_QCN5502;
+		chip = "5502";
+		rev = id & QCN550X_REV_ID_REVISION_MASK;
+		break;
+
 	default:
 		panic("ath79: unknown SoC, id:0x%08x", id);
 	}
@@ -192,7 +198,8 @@ static void __init ath79_detect_sys_type(void)
 	if (ver == 1)
 		ath79_soc_rev = rev;
 
-	if (soc_is_qca953x() || soc_is_qca955x() || soc_is_qca956x())
+	if (soc_is_qca953x() || soc_is_qca955x() || soc_is_qca956x() ||
+		soc_is_qcn550x())
 		sprintf(ath79_sys_type, "Qualcomm Atheros QCA%s ver %u rev %u",
 			chip, ver, rev);
 	else if (soc_is_tp9343())
diff --git a/arch/mips/include/asm/mach-ath79/ar71xx_regs.h b/arch/mips/include/asm/mach-ath79/ar71xx_regs.h
index 5cc90ff2cd6a..c3e3123f13f6 100644
--- a/arch/mips/include/asm/mach-ath79/ar71xx_regs.h
+++ b/arch/mips/include/asm/mach-ath79/ar71xx_regs.h
@@ -161,6 +161,23 @@
 #define QCA956X_GMAC_BASE	(AR71XX_APB_BASE + 0x00070000)
 #define QCA956X_GMAC_SIZE	0x64
 
+#define QCN550X_PCI_MEM_BASE1	0x12000000
+#define QCN550X_PCI_MEM_SIZE	0x02000000
+#define QCN550X_PCI_CFG_BASE1	0x16000000
+#define QCN550X_PCI_CFG_SIZE	0x1000
+#define QCN550X_PCI_CRP_BASE1	(AR71XX_APB_BASE + 0x00250000)
+#define QCN550X_PCI_CRP_SIZE	0x1000
+#define QCN550X_PCI_CTRL_BASE1	(AR71XX_APB_BASE + 0x00280000)
+#define QCN550X_PCI_CTRL_SIZE	0x100
+
+#define QCN550X_WMAC_BASE	(AR71XX_APB_BASE + 0x00100000)
+#define QCN550X_WMAC_SIZE	0x20000
+#define QCN550X_EHCI0_BASE	0x1b000000
+#define QCN550X_EHCI1_BASE	0x1b400000
+#define QCN550X_EHCI_SIZE	0x200
+#define QCN550X_GMAC_BASE	(AR71XX_APB_BASE + 0x00070000)
+#define QCN550X_GMAC_SIZE	0x64
+
 /*
  * Hidden Registers
  */
@@ -197,6 +214,10 @@
 #define QCA956X_DAM_RESET_SIZE		0x4
 #define QCA956X_INLINE_CHKSUM_ENG	BIT(27)
 
+#define QCN550X_DAM_RESET_OFFSET	0xb90001bc
+#define QCN550X_DAM_RESET_SIZE		0x4
+#define QCN550X_INLINE_CHKSUM_ENG	BIT(27)
+
 /*
  * DDR_CTRL block
  */
@@ -505,6 +526,49 @@
 #define QCA956X_PLL_ETH_SGMII_SERDES_PLL_REFCLK			BIT(1)
 #define QCA956X_PLL_ETH_SGMII_SERDES_EN_PLL			BIT(0)
 
+#define QCN550X_PLL_CPU_CONFIG_REG			0x00
+#define QCN550X_PLL_CPU_CONFIG1_REG			0x04
+#define QCN550X_PLL_DDR_CONFIG_REG			0x08
+#define QCN550X_PLL_DDR_CONFIG1_REG			0x0c
+#define QCN550X_PLL_CLK_CTRL_REG			0x10
+
+#define QCN550X_PLL_CPU_CONFIG_REFDIV_SHIFT		12
+#define QCN550X_PLL_CPU_CONFIG_REFDIV_MASK		0x1f
+#define QCN550X_PLL_CPU_CONFIG_OUTDIV_SHIFT		19
+#define QCN550X_PLL_CPU_CONFIG_OUTDIV_MASK		0x7
+
+#define QCN550X_PLL_CPU_CONFIG1_NFRAC_L_SHIFT		0
+#define QCN550X_PLL_CPU_CONFIG1_NFRAC_L_MASK		0x1f
+#define QCN550X_PLL_CPU_CONFIG1_NFRAC_H_SHIFT		5
+#define QCN550X_PLL_CPU_CONFIG1_NFRAC_H_MASK		0x1fff
+#define QCN550X_PLL_CPU_CONFIG1_NINT_SHIFT		18
+#define QCN550X_PLL_CPU_CONFIG1_NINT_MASK		0x1ff
+
+#define QCN550X_PLL_DDR_CONFIG_REFDIV_SHIFT		16
+#define QCN550X_PLL_DDR_CONFIG_REFDIV_MASK		0x1f
+#define QCN550X_PLL_DDR_CONFIG_OUTDIV_SHIFT		23
+#define QCN550X_PLL_DDR_CONFIG_OUTDIV_MASK		0x7
+
+#define QCN550X_PLL_DDR_CONFIG1_NFRAC_L_SHIFT		0
+#define QCN550X_PLL_DDR_CONFIG1_NFRAC_L_MASK		0x1f
+#define QCN550X_PLL_DDR_CONFIG1_NFRAC_H_SHIFT		5
+#define QCN550X_PLL_DDR_CONFIG1_NFRAC_H_MASK		0x1fff
+#define QCN550X_PLL_DDR_CONFIG1_NINT_SHIFT		18
+#define QCN550X_PLL_DDR_CONFIG1_NINT_MASK		0x1ff
+
+#define QCN550X_PLL_CLK_CTRL_CPU_PLL_BYPASS		BIT(2)
+#define QCN550X_PLL_CLK_CTRL_DDR_PLL_BYPASS		BIT(3)
+#define QCN550X_PLL_CLK_CTRL_AHB_PLL_BYPASS		BIT(4)
+#define QCN550X_PLL_CLK_CTRL_CPU_POST_DIV_SHIFT		5
+#define QCN550X_PLL_CLK_CTRL_CPU_POST_DIV_MASK		0x1f
+#define QCN550X_PLL_CLK_CTRL_DDR_POST_DIV_SHIFT		10
+#define QCN550X_PLL_CLK_CTRL_DDR_POST_DIV_MASK		0x1f
+#define QCN550X_PLL_CLK_CTRL_AHB_POST_DIV_SHIFT		15
+#define QCN550X_PLL_CLK_CTRL_AHB_POST_DIV_MASK		0x1f
+#define QCN550X_PLL_CLK_CTRL_CPU_DDRCLK_FROM_DDRPLL	BIT(20)
+#define QCN550X_PLL_CLK_CTRL_CPU_DDRCLK_FROM_CPUPLL	BIT(21)
+#define QCN550X_PLL_CLK_CTRL_AHBCLK_FROM_DDRPLL		BIT(24)
+
 /*
  * USB_CONFIG block
  */
@@ -556,6 +620,10 @@
 #define QCA956X_RESET_REG_BOOTSTRAP		0xb0
 #define QCA956X_RESET_REG_EXT_INT_STATUS	0xac
 
+#define QCN550X_RESET_REG_RESET_MODULE		0x1c
+#define QCN550X_RESET_REG_BOOTSTRAP		0xb0
+#define QCN550X_RESET_REG_EXT_INT_STATUS	0xac
+
 #define MISC_INT_MIPS_SI_TIMERINT_MASK	BIT(28)
 #define MISC_INT_ETHSW			BIT(12)
 #define MISC_INT_TIMER4			BIT(10)
@@ -752,6 +820,8 @@
 
 #define QCA956X_BOOTSTRAP_REF_CLK_40	BIT(2)
 
+#define QCN550X_BOOTSTRAP_REF_CLK_40	BIT(2)
+
 #define AR934X_PCIE_WMAC_INT_WMAC_MISC		BIT(0)
 #define AR934X_PCIE_WMAC_INT_WMAC_TX		BIT(1)
 #define AR934X_PCIE_WMAC_INT_WMAC_RXLP		BIT(2)
@@ -850,6 +920,37 @@
 	 QCA956X_EXT_INT_PCIE_RC2_INT1 | QCA956X_EXT_INT_PCIE_RC2_INT2 | \
 	 QCA956X_EXT_INT_PCIE_RC2_INT3)
 
+#define QCN550X_EXT_INT_WMAC_MISC		BIT(0)
+#define QCN550X_EXT_INT_WMAC_TX			BIT(1)
+#define QCN550X_EXT_INT_WMAC_RXLP		BIT(2)
+#define QCN550X_EXT_INT_WMAC_RXHP		BIT(3)
+#define QCN550X_EXT_INT_PCIE_RC1		BIT(4)
+#define QCN550X_EXT_INT_PCIE_RC1_INT0		BIT(5)
+#define QCN550X_EXT_INT_PCIE_RC1_INT1		BIT(6)
+#define QCN550X_EXT_INT_PCIE_RC1_INT2		BIT(7)
+#define QCN550X_EXT_INT_PCIE_RC1_INT3		BIT(8)
+#define QCN550X_EXT_INT_PCIE_RC2		BIT(12)
+#define QCN550X_EXT_INT_PCIE_RC2_INT0		BIT(13)
+#define QCN550X_EXT_INT_PCIE_RC2_INT1		BIT(14)
+#define QCN550X_EXT_INT_PCIE_RC2_INT2		BIT(15)
+#define QCN550X_EXT_INT_PCIE_RC2_INT3		BIT(16)
+#define QCN550X_EXT_INT_USB1			BIT(24)
+#define QCN550X_EXT_INT_USB2			BIT(28)
+
+#define QCN550X_EXT_INT_WMAC_ALL \
+	(QCN550X_EXT_INT_WMAC_MISC | QCA956X_EXT_INT_WMAC_TX | \
+	 QCN550X_EXT_INT_WMAC_RXLP | QCA956X_EXT_INT_WMAC_RXHP)
+
+#define QCN550X_EXT_INT_PCIE_RC1_ALL \
+	(QCN550X_EXT_INT_PCIE_RC1 | QCA956X_EXT_INT_PCIE_RC1_INT0 | \
+	 QCN550X_EXT_INT_PCIE_RC1_INT1 | QCA956X_EXT_INT_PCIE_RC1_INT2 | \
+	 QCN550X_EXT_INT_PCIE_RC1_INT3)
+
+#define QCN550X_EXT_INT_PCIE_RC2_ALL \
+	(QCN550X_EXT_INT_PCIE_RC2 | QCA956X_EXT_INT_PCIE_RC2_INT0 | \
+	 QCN550X_EXT_INT_PCIE_RC2_INT1 | QCA956X_EXT_INT_PCIE_RC2_INT2 | \
+	 QCN550X_EXT_INT_PCIE_RC2_INT3)
+
 #define REV_ID_MAJOR_MASK		0xfff0
 #define REV_ID_MAJOR_AR71XX		0x00a0
 #define REV_ID_MAJOR_AR913X		0x00b0
@@ -867,6 +968,7 @@
 #define REV_ID_MAJOR_QCA9558		0x1130
 #define REV_ID_MAJOR_TP9343		0x0150
 #define REV_ID_MAJOR_QCA956X		0x1150
+#define REV_ID_MAJOR_QCN5502		0x2170
 
 #define AR71XX_REV_ID_MINOR_MASK	0x3
 #define AR71XX_REV_ID_MINOR_AR7130	0x0
@@ -893,6 +995,8 @@
 
 #define QCA956X_REV_ID_REVISION_MASK	0xf
 
+#define QCN550X_REV_ID_REVISION_MASK	0xf
+
 /*
  * SPI block
  */
@@ -978,6 +1082,19 @@
 #define QCA956X_GPIO_OUT_MUX_GE0_MDO	32
 #define QCA956X_GPIO_OUT_MUX_GE0_MDC	33
 
+#define QCN550X_GPIO_REG_OUT_FUNC0	0x2c
+#define QCN550X_GPIO_REG_OUT_FUNC1	0x30
+#define QCN550X_GPIO_REG_OUT_FUNC2	0x34
+#define QCN550X_GPIO_REG_OUT_FUNC3	0x38
+#define QCN550X_GPIO_REG_OUT_FUNC4	0x3c
+#define QCN550X_GPIO_REG_OUT_FUNC5	0x40
+#define QCN550X_GPIO_REG_IN_ENABLE0	0x44
+#define QCN550X_GPIO_REG_IN_ENABLE3	0x50
+#define QCN550X_GPIO_REG_FUNC		0x6c
+
+#define QCN550X_GPIO_OUT_MUX_GE0_MDO	32
+#define QCN550X_GPIO_OUT_MUX_GE0_MDC	33
+
 #define AR71XX_GPIO_COUNT		16
 #define AR7240_GPIO_COUNT		18
 #define AR7241_GPIO_COUNT		20
@@ -987,6 +1104,7 @@
 #define QCA953X_GPIO_COUNT		18
 #define QCA955X_GPIO_COUNT		24
 #define QCA956X_GPIO_COUNT		23
+#define QCN550X_GPIO_COUNT		20
 
 /*
  * SRIF block
@@ -1382,4 +1500,12 @@
 #define QCA956X_SGMII_CONFIG_MODE_CTRL_MASK	0x7
 #define QCA956X_SGMII_CONFIG_MODE_CTRL_SGMII_MAC	0x2
 
+/*
+ * QCN550X GMAC Interface
+ */
+#define QCN550X_GMAC_REG_ETH_CFG	0x00
+
+#define QCN550X_ETH_CFG_RGMII_EN	BIT(0)
+#define QCN550X_ETH_CFG_GE0_SGMII	BIT(6)
+
 #endif /* __ASM_MACH_AR71XX_REGS_H */
diff --git a/arch/mips/include/asm/mach-ath79/ath79.h b/arch/mips/include/asm/mach-ath79/ath79.h
index 0066522daed8..d04872607428 100644
--- a/arch/mips/include/asm/mach-ath79/ath79.h
+++ b/arch/mips/include/asm/mach-ath79/ath79.h
@@ -34,6 +34,7 @@ enum ath79_soc_type {
 	ATH79_SOC_QCA9558,
 	ATH79_SOC_TP9343,
 	ATH79_SOC_QCA956X,
+	ATH79_SOC_QCN5502,
 };
 
 extern enum ath79_soc_type ath79_soc;
@@ -145,6 +146,16 @@ static inline int soc_is_qca956x(void)
 	return soc_is_qca9561() || soc_is_qca9563();
 }
 
+static inline int soc_is_qcn5502(void)
+{
+	return ath79_soc == ATH79_SOC_QCN5502;
+}
+
+static inline int soc_is_qcn550x(void)
+{
+	return soc_is_qcn5502();
+}
+
 void ath79_ddr_wb_flush(unsigned int reg);
 void ath79_ddr_set_pci_windows(void);
 
-- 
2.20.1

